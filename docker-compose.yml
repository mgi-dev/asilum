version: "3.3"

services:
  app:
    container_name: ${APP_NAME}
    build:
      context: .
      dockerfile: services/app/Dockerfile
      args:
        APP_NAME: ${APP_NAME}
        DB_NAME: ${DB_NAME}
        DB_USER: ${DB_USER}
        DB_PASSWORD: ${DB_PASSWORD}
    ports:
    - ${APP_PORT}:8080
    volumes:
    - ./app:/usr/${APP_NAME}
    depends_on:
    - db
    networks:
    - local
  #    - traefik-net
#    tty: true

  db:
    container_name: ${APP_NAME}-db
#    image: ${REGISTRY_URL}/db:${DB_CONTAINER_VERSION}
    build:
      context: ./services/db
      dockerfile: Dockerfile
      args:
        DB_NAME: ${DB_NAME}
        DB_USER: ${DB_USER}
        DB_PASSWORD: ${DB_PASSWORD}
        USER_UID: ${USER_UID}
    command: mysqld --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci --innodb-flush-method=O_DSYNC --default-authentication-plugin=mysql_native_password
    volumes:
    - ./database:/var/lib/mysql
    - ./services/db/provisionning:/dump
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
    networks:
    - local

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: ${APP_NAME}-phpmyadmin
    ports:
    - ${PHPMYADMIN_PORT}:80
#    labels:
#    - "traefik.enable=true"
#    - "traefik.backend=phpmyadmin-babel"
#    - "traefik.docker.network=traefik_traefik-net"
#    - "traefik.frontend.rule=Host:phpmyadmin.${VHOST_URL}"
#    - "traefik.frontend.entryPoints=http,https"
    networks:
    - local
#    - traefik-net
    depends_on:
    - db


networks:
  local:
#  traefik-net:
#    external:
#      name: traefik_traefik-net


